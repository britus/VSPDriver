// ********************************************************************
// VSPDriver - VSPDriver.cpp
//
// Copyright Â© 2025 by EoF Software Labs
// SPDX-License-Identifier: MIT
// ********************************************************************
#ifndef VSPDriver_h
#define VSPDriver_h

#include <Availability.h>
#include <SerialDriverKit/IOUserSerial.iig>

class VSPDriverPrivate;

struct VSPDriver_IVars {
    VSPDriverPrivate* p;
    int c;
};

class VSPDriver: public IOUserSerial
{
public:
    virtual bool init() override;
    virtual void free() override;
    
    virtual kern_return_t Start(IOService* provider) override;
    virtual kern_return_t Stop(IOService* provider) override;
    
    virtual void RxDataAvailable() override;
    virtual void TxFreeSpaceAvailable() override;
    
    virtual kern_return_t SetModemStatus(bool cts, bool dsr, bool ri, bool dcd) override;
    virtual kern_return_t RxError(bool overrun, bool gotBreak, bool framingError, bool parityError) override;
protected:
    VSPDriver_IVars p;
};

#endif /* VSPDriver_h */
