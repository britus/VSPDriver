// ********************************************************************
// VSPUserClient.iig - VSP controller object
//
// The IOKit Interface Generator file that declares
// the driver's methods.
//
// Copyright © 2025 by EoF Software Labs
// Copyright © 2024 Apple Inc. (some copied parts)
// SPDX-License-Identifier: MIT
// ********************************************************************
#ifndef VSPUserClient_h
#define VSPUserClient_h

#include <Availability.h>
#include <DriverKit/IOService.iig>
#include <DriverKit/IOUserClient.iig>
#include <DriverKit/IOTimerDispatchSource.iig>

class VSPDriver;
class VSPUserClient: public IOUserClient
{
public:
    virtual bool init(void) override;
    virtual void free(void) override;
    
    virtual kern_return_t Start(IOService* provider) override;
    virtual kern_return_t Stop(IOService* provider) override;
    
    virtual kern_return_t ExternalMethod(uint64_t selector,
                                         IOUserClientMethodArguments* arguments,
                                         const IOUserClientMethodDispatch* dispatch,
                                         OSObject* target,
                                         void* reference) override;
    
    // Timed async callback to user client
    virtual void AsyncCallback(OSAction* action, uint64_t time) TYPE(IOTimerDispatchSource::TimerOccurred);
    
    // -----------------------------------------
    // VSPDriver related
    // -----------------------------------------
    
    // called by VSPDriver instance
    void setParent(VSPDriver* parent) LOCALONLY;
    
    // Schedule timed event -> IOTimerDispatchSource::TimerOccurred
    kern_return_t scheduleEvent(void) LOCALONLY;
    
    // Prepares async response
    kern_return_t prepareResponse(void* reference, IOUserClientMethodArguments* arguments) LOCALONLY;
    
    // -----------------------------------------
    // User client external interface method
    // entry points and its instance methods
    // -----------------------------------------
    
    static
    kern_return_t exGetStatus(OSObject* target, void* reference, IOUserClientMethodArguments* arguments) LOCALONLY;
    kern_return_t getStatus(void* reference, IOUserClientMethodArguments* arguments) LOCALONLY;
    
    static
    kern_return_t exGetPortList(OSObject* target, void* reference, IOUserClientMethodArguments* arguments) LOCALONLY;
    kern_return_t getPortList(void* reference, IOUserClientMethodArguments* arguments) LOCALONLY;
    
    static
    kern_return_t exLinkPorts(OSObject* target, void* reference, IOUserClientMethodArguments* arguments) LOCALONLY;
    kern_return_t linkPorts(void* reference, IOUserClientMethodArguments* arguments) LOCALONLY;
    
    static
    kern_return_t exUnlinkPorts(OSObject* target, void* reference, IOUserClientMethodArguments* arguments) LOCALONLY;
    kern_return_t unlinkPorts(void* reference, IOUserClientMethodArguments* arguments) LOCALONLY;
    
    static
    kern_return_t exEnableChecks(OSObject* target, void* reference, IOUserClientMethodArguments* arguments) LOCALONLY;
    kern_return_t enableChecks(void* reference, IOUserClientMethodArguments* arguments) LOCALONLY;
    
    static
    kern_return_t exEnableTrace(OSObject* target, void* reference, IOUserClientMethodArguments* arguments) LOCALONLY;
    kern_return_t enableTrace(void* reference, IOUserClientMethodArguments* arguments) LOCALONLY;
};

#endif /* VSPUserClient_h */
